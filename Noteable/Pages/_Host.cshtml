@page "/"
@using Microsoft.AspNetCore.Components.Web
@namespace Noteable.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8"/>
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
	<title>Noteable</title>
	<base href="~/"/>
	
	<!--  FONTS  -->
	<link rel="preconnect" href="https://fonts.googleapis.com">
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
	<link href="https://fonts.googleapis.com/css2?family=Saira+Condensed:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    
	<link rel="preconnect" href="https://fonts.googleapis.com">
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
	<link href="https://fonts.googleapis.com/css2?family=Ubuntu+Mono:wght@700&display=swap" rel="stylesheet">

	<!-- ICONS -->
	<link rel="stylesheet" href="css/bootstrap-icons/font/bootstrap-icons.css">
    
	<!--  STYLES  -->
	<link href="bootstrap/css/bootstrap.css" rel="stylesheet" />

	<link href="css/modal.css" rel="stylesheet" />
	<link href="css/toasts.css" rel="stylesheet" />
	<link href="css/site.css" rel="stylesheet"/>
	<link href="css/app.css" rel="stylesheet"/>
	
	<link href="Noteable.styles.css" rel="stylesheet" />
	<component type="typeof(HeadOutlet)" render-mode="ServerPrerendered"/>
</head>

<body data-bs-theme="dark">
	<component type="typeof(App)" render-mode="ServerPrerendered"/>

	<div id="blazor-error-ui">
		<environment include="Staging,Production">
			An error has occurred. This application may no longer respond until reloaded.
		</environment>
		<environment include="Development">
			An unhandled exception has occurred. See browser dev tools for details.
		</environment>
		<a href="" class="reload">Reload</a>
		<a class="dismiss">🗙</a>
	</div>

	<script src="_framework/blazor.server.js"></script>

	<script>
	    window.focus = (element) => { element.focus(); }
		window.toggleTheme = () => {
			const body = document.body;
			const currentTheme = body.getAttribute('data-bs-theme');
			const newTheme = currentTheme === 'light' ? 'dark' : 'light';
			body.setAttribute('data-bs-theme', newTheme);
		}
		
		window.addClassWithTimeout = (elementId, className, timeout) => {
			const element = document.getElementById(elementId);
			if (element) {
				console.log("Element: ", element);
				console.log("Element Style: ", element.style);
				console.log("Element Animation Duration: ", element.style.animationDuration);
    
    			element.style.animationDuration = timeout + 'ms';
				element.classList.add(className);
				setTimeout(() => {
					element.classList.remove(className);
				}, timeout);
			} else {
				console.error("Element is undefined");
			}
		}

	</script>
</body>
</html>